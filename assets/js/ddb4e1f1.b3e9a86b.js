"use strict";(self.webpackChunkstardust_website=self.webpackChunkstardust_website||[]).push([[948],{5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>y});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(y,o(o({ref:t},c),{},{components:r})):n.createElement(y,o({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5207:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(8168),a=(r(6540),r(5680));const i={sidebar_position:1},o="Overview",s={unversionedId:"overview",id:"overview",title:"Overview",description:"Stardust XR (formerly known as Stardust) is an XR display server designed for Linux-based systems.",source:"@site/docs/01-overview.md",sourceDirName:".",slug:"/overview",permalink:"/docs/overview",draft:!1,editUrl:"https://github.com/StardustXR/website/edit/main/docs/01-overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Tutorial",permalink:"/docs/getting-started/tutorial"}},l={},p=[{value:"Priorities",id:"priorities",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Projects &amp; Components",id:"projects--components",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...i}=e;return(0,a.yg)(u,(0,n.A)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"overview"},"Overview"),(0,a.yg)("p",null,"Stardust XR ",(0,a.yg)("em",{parentName:"p"},"(formerly known as Stardust)")," is an XR ",(0,a.yg)("a",{parentName:"p",href:"https://itsfoss.com/display-server"},"display server")," designed for Linux-based systems",".",(0,a.yg)("br",null),"\nUnlike traditional display servers that focus on 2D screens, Stardust XR introduces new conventions to utilize unbounded 3D space in virtual or real environments."),(0,a.yg)("h2",{id:"priorities"},"Priorities"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"3D Environment Focus"),": While supporting 2D clients through the Wayland protocol, Stardust XR primarily aims to create and manage 3D environments.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Standard Interfaces"),": Utilizes Wayland and OpenXR for 2D and XR app integration.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Stardust Protocol"),": Implements a special protocol for:"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Creating virtual objects"),(0,a.yg)("li",{parentName:"ul"},"Developing 3D UIs around 2D apps (Panel Shells)"),(0,a.yg)("li",{parentName:"ul"},"Handling data as Items that can represent files, Wayland surfaces, etc."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Personal Device Interaction"),": Focuses on individual user interactions rather than collaborative 3D spaces.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Flexible Object Interaction"),": Users can choose objects that best suit their current scenario, with easy setup for default configurations."))),(0,a.yg)("h2",{id:"architecture"},"Architecture"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"simplified architecture diagram",src:r(7308).A,width:"6458",height:"1512"})),(0,a.yg)("h2",{id:"projects--components"},"Projects & Components"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/StardustXR/telescope"},(0,a.yg)("strong",{parentName:"a"},"telescope")),": bundle most used components to have a demo environment set up"),(0,a.yg)("li",{parentName:"ul"},"...")))}d.isMDXComponent=!0},7308:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/simplified-architecture-5e703d980563124e244f2ea57c30c715.png"}}]);