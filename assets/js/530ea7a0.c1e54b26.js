"use strict";(self.webpackChunkstardust_website=self.webpackChunkstardust_website||[]).push([[459],{4768:(t,e,a)=>{a.r(e),a.d(e,{contentTitle:()=>i,default:()=>l,frontMatter:()=>n,metadata:()=>o,toc:()=>p});var s=a(7462),r=(a(7294),a(3905));const n={sidebar_position:3},i="Setup",o={unversionedId:"getting-started/setup",id:"getting-started/setup",isDocsHomePage:!1,title:"Setup",description:"First you need to install and run the server from https//gitlab.freedesktop.org/monado/demos/xrgears first.",source:"@site/docs/getting-started/setup.md",sourceDirName:"getting-started",slug:"/getting-started/setup",permalink:"/docs/getting-started/setup",editUrl:"https://github.com/StardustXR/website/edit/main/docs/getting-started/setup.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Technical Overview",permalink:"/docs/getting-started/tech-overview"},next:{title:"Making Clients",permalink:"/docs/getting-started/making-clients"}},p=[],u={toc:p};function l(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,s.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setup"},"Setup"),(0,r.kt)("p",null,"First you need to install and run the server from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/StardustXR/server"},"https://github.com/StardustXR/server"),". Follow the README. If you have issues getting OpenXR to work, try running ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.freedesktop.org/monado/demos/xrgears"},"https://gitlab.freedesktop.org/monado/demos/xrgears")," first."),(0,r.kt)("p",null,"After the server is running, you'll need to run some clients. Here's a demo showing some off:\n",(0,r.kt)("img",{alt:"A showcase of some different clients",src:a(7608).Z})),(0,r.kt)("p",null,"Non-exhaustive list of clients:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/StardustXR/flatland"},"Flatland"),": A panel item UI (XR equivalent of a window manager) so you can interact with your apps using virtual touchscreens. To show Wayland apps, run them with the proper ",(0,r.kt)("inlineCode",{parentName:"li"},"WAYLAND_DISPLAY")," environment variable, in the server's startup script, or use a stardust launcher such as gravity or protostar. Flatland works great in 3DoF or 6DoF with direct touch and pointer interaction.\n",(0,r.kt)("img",{alt:"A flat panel containing the prism launcher",src:a(3209).Z})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/StardustXR/gravity"},"Gravity"),": Command line tool to launch programs inside of stardust at a particular offset in space. This is nestable so you can run a script using gravity, and then gravity inside that script to make a whole composed setup out of thin air! It also ensures that everything launched through it will properly connect to the stardust server, such as wayland clients."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/StardustXR/protostar"},"Protostar"),": Prototype app launcher library/examples. Grab app icons and drop them in space to launch apps where they're dropped."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/StardustXR/magnetar"},"Magnetar"),": Workspaces in 3D. Any object inside the rings will move with them, so you can move a bunch of stuff out of the way temporarily when you don't need it.")))}l.isMDXComponent=!0},7608:(t,e,a)=>{a.d(e,{Z:()=>s});const s=a.p+"assets/images/demo_01-3f062278f190ed11479d5ea8e039dc64.mp4"},3209:(t,e,a)=>{a.d(e,{Z:()=>s});const s=a.p+"assets/images/flatland-c9d34ce9792aaeed42e52ead19bb1a4c.png"}}]);